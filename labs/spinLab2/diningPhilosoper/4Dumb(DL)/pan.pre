# 1 "diningPhil.pml"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "diningPhil.pml"



bool thinking[4], hungry[4], eating[4] = false;
int forks[4] = -1;
# 21 "diningPhil.pml"
ltl starvation {! [] (((hungry[0] -> <> eating[0]) && (hungry[1] -> <> eating[1]) && (hungry[2] -> <> eating[2]) && (hungry[3] -> <> eating[3])))}

proctype P(int i){
    int left = i , right = (i+1)%4;

Think:
    atomic{
        eating[i] = false;
        thinking[i] = true;
    };

Hungry:
    atomic{
        thinking[i] = false;
        hungry[i] = true;
    };


    if :: skip;

            atomic{
                if
                ::forks[left] == -1 -> forks[left] = i
                fi
            }

            atomic{
                if
                ::forks[right] == -1 -> forks[right] = i
                fi
            }



        :: skip;
            atomic{
                if
                ::forks[right] == -1 -> forks[right] = i
                fi
            }

            atomic {
                if
                ::forks[left] == -1 -> forks[left] = i
                fi
            }
    fi


Eat:
    atomic{
        hungry[i] = false;
        eating[i] = true;
    };

Done:
    forks[right] = -1;
    forks[left] = -1;
    goto Think;
}


init{
    atomic {
        run P(0);
        run P(1);
        run P(2);
        run P(3);
    }
}
